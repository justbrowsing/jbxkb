#!/usr/bin/env python2
###############
### jbxkb #####
version=0.3 ###
###############

import gtk, sys
import commands
from subprocess import call

keymaps = [ "us", "af", "jp", "be", "bg", "br", "by", "ca", "cn", "cz", "de", "fr" ]

class trayapplet:
    def __init__(self):
        try: 
            input = sys.argv[1]
        except:
            input = "us"        

        self.statusicon = gtk.StatusIcon()
        self.set_layout(None, input)
        self.statusicon.connect("activate", self.left_click_event)
        self.statusicon.connect("popup-menu", self.right_click_event)

    def left_click_event(self, time):
        layout = commands.getoutput("xkb-switch")

        if layout in keymaps:
            get_index = keymaps.index(layout)
            if get_index == (len(keymaps)-1):
                self.set_layout(None, keymaps[0])
            else:
                self.set_layout(None, keymaps[get_index+1])
        else:
            self.set_layout(None, input)

    def right_click_event(self, icon, button, time):
        self.menu = gtk.Menu()

        for layout in keymaps:
            self.add_layout(layout)

        quit = gtk.MenuItem("Quit")
        quit.connect("activate", gtk.main_quit)
        self.menu.append(quit)

        self.menu.show_all()

	def pos(menu, icon):
		return (gtk.StatusIcon.position_menu(menu, icon))
        self.menu.popup(None, None, None, button, time) 

    def add_layout(self, layout):
		entry = gtk.ImageMenuItem(str.upper(layout))
		entry_flag = gtk.Image()
		entry_flag.set_from_file("/usr/share/jbxkb/" + layout + ".png")
		entry.set_image(entry_flag)
		entry.connect("activate", self.set_layout, layout)
		self.menu.append(entry)
		return None

    def set_layout(self, widget, layout):
		call(["setxkbmap", layout])
		self.statusicon.set_from_file("/usr/share/jbxkb/" + layout + ".png")
		self.statusicon.set_tooltip_text(layout)
		return None

trayapplet()
gtk.main()

### END ###
